@model TennisFinalGrp339.Models.Schedule
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Details";
    var user = await UserManager.GetUserAsync(User); // Get the logged-in user
    var isEnrolled = Model.Enrollments.Any(e => e.MemberId == user.MemberId); // Check if the user is enrolled
}


<h1>Details</h1>

<div>
    <h4>Schedule</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Location)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Location)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">Scheduled Date</dt>
        <dd class="col-sm-10">@Model.ScheduledDate.ToShortDateString()</dd>

        <dt class="col-sm-2">Coach</dt>
        <dd class="col-sm-10">
            <a asp-controller="Coaches" asp-action="Details" asp-route-id="@Model.CoachId">
                @Model.Coach.FirstName @Model.Coach.LastName
            </a>
        </dd>

    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.ScheduleId">Edit</a> |
    <a asp-action="Index">Back to List</a> |

    @if (isEnrolled)
    {
        <!-- Unenroll button if the user is enrolled -->
        <a asp-action="Unenroll" asp-route-id="@Model?.ScheduleId" class="btn btn-warning">Unenroll</a>
    }
    else
    {
        <!-- Enroll button if the user is not enrolled -->
        <a asp-action="Enroll" asp-route-id="@Model?.ScheduleId" class="btn btn-primary">Enroll</a>
    }
</div>
